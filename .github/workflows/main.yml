name: Personality Model CI Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]
  workflow_dispatch:

env:
  DOCKER_IMAGE_NAME: ${{ secrets.DOCKER_USERNAME }}/personality-model
  EXPERIMENT_NAME: membangun_model

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r MLProject/requirements.txt
          pip install flake8

      - name: Lint code
        run: flake8 MLProject/modelling.py --count --select=E9,F63,F7,F82 --show-source --statistics

  build-and-train:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PAT }}

      - name: Build Docker image
        run: |
          docker build -t ${{ env.DOCKER_IMAGE_NAME }}:${{ github.sha }} .
          docker build -t ${{ env.DOCKER_IMAGE_NAME }}:latest .

      - name: Create model output directory
        run: mkdir -p model_output

      - name: Run ML training with MLflow in Docker
        env:
          DAGSHUB_USERNAME: ${{ secrets.DAGSHUB_USERNAME }}
          DAGSHUB_TOKEN: ${{ secrets.DAGSHUB_TOKEN }}
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          GITHUB_RUN_NUMBER: ${{ github.run_number }}
          GITHUB_SHA: ${{ github.sha }}
          GITHUB_REF: ${{ github.ref }}
          GITHUB_REPOSITORY: ${{ github.repository }}
          GITHUB_ACTOR: ${{ github.actor }}
        run: |
          RUN_ID=$(ls -td mlruns/0/*/ | head -n 1 | cut -d'/' -f3)
          echo "run_id=$RUN_ID" >> $GITHUB_OUTPUT

      - name: Check if model dir exists
        working-directory: ./MLProject
        run: |
          run_id=${{ steps.get_run_id.outputs.run_id }}
          if [ ! -d "mlruns/0/$run_id/artifacts/model" ]; then
            echo "Model directory does not exist!"
            exit 1
          fi

      - name: Upload to GitHub Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: model-artifacts
          path: model_output/
          retention-days: 30
          if-no-files-found: warn

      - name: Setup Google Drive credentials
        if: success()
        run: |
          echo "${{ secrets.GDRIVE_CREDENTIALS }}" | base64 --decode > scripts/service_account.json
          # Verify file was created correctly (without showing content)
          ls -la scripts/service_account.json

      - name: Upload to Google Drive
        if: success()
        run: |
          pip install google-auth google-auth-oauthlib google-auth-httplib2 google-api-python-client
          python scripts/upload_to_gdrive.py

      - name: Push Docker image
        if: success()
        run: |
          docker push ${{ env.DOCKER_IMAGE_NAME }}:${{ github.sha }}
          docker push ${{ env.DOCKER_IMAGE_NAME }}:latest

  deploy:
    needs: build-and-train
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Deploy notification
        run: |
          echo "🚀 Model training completed successfully!"
          echo "📊 MLflow tracking: https://dagshub.com/${{ secrets.DAGSHUB_USERNAME }}/Personality-Tracking-Model.mlflow"
          echo "🐳 Docker image: ${{ env.DOCKER_IMAGE_NAME }}:${{ github.sha }}"
          echo "📁 Artifacts uploaded to Google Drive"
